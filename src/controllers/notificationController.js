const notificationService = require('../services/notificationService');const { logger } = require('../utils/logger');const getNotifications = async (req, res) => {  try {    const { page = 1, limit = 10 } = req.query;    const result = await notificationService.getUserNotifications(      req.userId,      parseInt(page),      parseInt(limit)    );    res.status(200).json({      success: true,      ...result    });  } catch (error) {    logger.error(`Get notifications error: ${error.message}`);    res.status(500).json({      success: false,      message: 'Gagal mengambil notifikasi',      error: error.message    });  }};const markAsRead = async (req, res) => {  try {    const { notificationId } = req.params;    const notification = await notificationService.markNotificationAsRead(      notificationId,      req.userId    );    if (!notification) {      return res.status(404).json({        success: false,        message: 'Notifikasi tidak ditemukan'      });    }    res.status(200).json({      success: true,      message: 'Notifikasi ditandai sebagai telah dibaca',      notification    });  } catch (error) {    logger.error(`Mark notification as read error: ${error.message}`);    res.status(500).json({      success: false,      message: 'Gagal menandai notifikasi',      error: error.message    });  }};const markAllAsRead = async (req, res) => {  try {    await Notification.updateMany(      {        recipient: req.userId,        isRead: false      },      {        isRead: true,        readAt: new Date()      }    );    res.status(200).json({      success: true,      message: 'Semua notifikasi ditandai sebagai telah dibaca'    });  } catch (error) {    logger.error(`Mark all notifications as read error: ${error.message}`);    res.status(500).json({      success: false,      message: 'Gagal menandai semua notifikasi',      error: error.message    });  }};module.exports = {  getNotifications,  markAsRead,  markAllAsRead};